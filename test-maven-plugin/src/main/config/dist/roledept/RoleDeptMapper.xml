<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.alvin.test.roledept.RoleDeptDao" >

	<!--结果集映射-->
  <resultMap id="BaseResultMap" type="org.alvin.test.roledept.RoleDept" >
       <id column="id" property="id" jdbcType="BIGINT" />
	    <id column="id" property="id" jdbcType="BIGINT" />
	    <id column="role_id" property="roleId" jdbcType="INTEGER" />
	    <id column="role_id" property="roleId" jdbcType="INTEGER" />
	    <id column="dept_id" property="deptId" jdbcType="INTEGER" />
	    <id column="dept_id" property="deptId" jdbcType="INTEGER" />
	  </resultMap>
  
   <!--保存对象,并生产主键-->
  <insert id="save" parameterType="org.alvin.test.roledept.RoleDept" useGeneratedKeys="true" keyProperty="id">
        insert into `admin_role_dept`
        <trim prefix="(" suffix=")" suffixOverrides=",">
         		 				 				 			<if test="roleId != null">
                 `role_id`,
            </if>
						 			<if test="roleId != null">
                 `role_id`,
            </if>
						 			<if test="deptId != null">
                 `dept_id`,
            </if>
						 			<if test="deptId != null">
                 `dept_id`,
            </if>
				        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
							 					 						<if test="roleId != null">
                 #{roleId,jdbcType=INTEGER},
            </if>
					 						<if test="roleId != null">
                 #{roleId,jdbcType=INTEGER},
            </if>
					 						<if test="deptId != null">
                 #{deptId,jdbcType=INTEGER},
            </if>
					 						<if test="deptId != null">
                 #{deptId,jdbcType=INTEGER},
            </if>
					         </trim>
    </insert>
	
	 <!--保存对象,并生产主键-->
	<insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        insert into `admin_role_dept`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            			  		  			  		  			  				`role_id`,    
			 		  			  				`role_id`,    
			 		  			  				`dept_id`,    
			 		  			  				`dept_id`,    
			 		          </trim>
        <trim prefix="values " suffixOverrides=",">
            <foreach collection="list" item="item" index="index" separator=",">
                <trim prefix="(" suffix=")" suffixOverrides=",">
                 									 									 										 #{item.roleId,jdbcType=INTEGER},
									 										 #{item.roleId,jdbcType=INTEGER},
									 										 #{item.deptId,jdbcType=INTEGER},
									 										 #{item.deptId,jdbcType=INTEGER},
									                 </trim>
            </foreach>
        </trim>
    </insert>
  
  <!--根据id列表删除对象-->
   <delete id="delete" parameterType="Long[]">
    delete from `admin_role_dept`
    where `id` in 
	<foreach collection="array" index="index" item="item" open="(" separator="," close=")">
     #{item}
    </foreach>
  </delete>
   <!--逻辑删除-->
	  <update id="deleteLogic" parameterType="Long[]">
			update `admin_role_dept`
			<set>
			 `status` = -1  
			</set>
			where `id` in 
			<foreach collection="array" index="index" item="item" open="(" separator="," close=")">
					#{item}
			</foreach>
		</update>
  <!--根据id修改数据,不判断空-->
   <update id="update" parameterType="org.alvin.test.roledept.RoleDept">
        update `admin_role_dept`
        <set>
		<trim   suffixOverrides=",">
		 			`id` = #{id,jdbcType=BIGINT},
					`id` = #{id,jdbcType=BIGINT},
					`role_id` = #{roleId,jdbcType=INTEGER},
					`role_id` = #{roleId,jdbcType=INTEGER},
					`dept_id` = #{deptId,jdbcType=INTEGER},
					`dept_id` = #{deptId,jdbcType=INTEGER},
				 </trim>
        </set>
        where `id` = #{id,jdbcType=BIGINT} 
    </update>
	<!--根据id修改数据,判断空-->
	<update id="updateNotNull" parameterType="org.alvin.test.roledept.RoleDept">
        update `admin_role_dept`
        <set> 
		<trim   suffixOverrides=",">
		 		
			 <if test="id != null">
                `id` = #{id,jdbcType=BIGINT},
            </if>	
		 		
			 <if test="id != null">
                `id` = #{id,jdbcType=BIGINT},
            </if>	
		 		
			 <if test="roleId != null">
                `role_id` = #{roleId,jdbcType=INTEGER},
            </if>	
		 		
			 <if test="roleId != null">
                `role_id` = #{roleId,jdbcType=INTEGER},
            </if>	
		 		
			 <if test="deptId != null">
                `dept_id` = #{deptId,jdbcType=INTEGER},
            </if>	
		 		
			 <if test="deptId != null">
                `dept_id` = #{deptId,jdbcType=INTEGER},
            </if>	
		 	 </trim>
        </set>
        where `id` = #{id,jdbcType=BIGINT} 
    </update>
 
<!--基础字段查询-->
  <sql id="Base_Column_List" >
     <trim   suffixOverrides=",">
	 	 t.`id`,
	 	 t.`id`,
	 	 t.`role_id`,
	 	 t.`role_id`,
	 	 t.`dept_id`,
	 	 t.`dept_id`,
	 	 </trim>
  </sql>
	<!--列表查询-->
	 <select id="queryList" resultMap="BaseResultMap" parameterType="org.alvin.test.roledept.RoleDeptCond">
	   select 
		<include refid="Base_Column_List" />
		from `admin_role_dept` as t
		where 1=1
		<trim   suffixOverrides=",">
					<if test="id != null">
									and t.`id` = #{id,jdbcType=BIGINT},
							</if>
		 			<if test="id != null">
									and t.`id` = #{id,jdbcType=BIGINT},
							</if>
		 			<if test="roleId != null">
									and t.`role_id` = #{roleId,jdbcType=INTEGER},
							</if>
		 			<if test="roleId != null">
									and t.`role_id` = #{roleId,jdbcType=INTEGER},
							</if>
		 			<if test="deptId != null">
									and t.`dept_id` = #{deptId,jdbcType=INTEGER},
							</if>
		 			<if test="deptId != null">
									and t.`dept_id` = #{deptId,jdbcType=INTEGER},
							</if>
		 		 </trim>
		 order by t.`id` desc
    </select>
	<!--单个查询-->
	<select id="findOne" resultMap="BaseResultMap" parameterType="org.alvin.test.roledept.RoleDeptCond">
	   select 
		<include refid="Base_Column_List" />
		from `admin_role_dept` as t
		where 1=1
		<trim   suffixOverrides=",">
					<if test="id != null">
									and t.`id` = #{id,jdbcType=BIGINT},
							</if>
		 			<if test="id != null">
									and t.`id` = #{id,jdbcType=BIGINT},
							</if>
		 			<if test="roleId != null">
									and t.`role_id` = #{roleId,jdbcType=INTEGER},
							</if>
		 			<if test="roleId != null">
									and t.`role_id` = #{roleId,jdbcType=INTEGER},
							</if>
		 			<if test="deptId != null">
									and t.`dept_id` = #{deptId,jdbcType=INTEGER},
							</if>
		 			<if test="deptId != null">
									and t.`dept_id` = #{deptId,jdbcType=INTEGER},
							</if>
		 		 </trim>
		 order by t.`id` desc LIMIT 0,1
    </select>
	<!--根据主键查询-->
	<select id="findById" resultMap="BaseResultMap" parameterType="org.alvin.test.roledept.RoleDeptCond">
	   select 
		<include refid="Base_Column_List" />
		from `admin_role_dept` as t
		where t.`id` =  #{id,jdbcType=BIGINT} 
    </select>
	<!--查询返回数量-->
	<select id="queryCount" resultType="java.lang.Long" parameterType="org.alvin.test.roledept.RoleDeptCond">
	   select count(t.`id`)
		from `admin_role_dept` as t
		where 1=1
		<trim   suffixOverrides=",">
					<if test="id != null">
									and t.`id` = #{id,jdbcType=BIGINT},
							</if>
		 			<if test="id != null">
									and t.`id` = #{id,jdbcType=BIGINT},
							</if>
		 			<if test="roleId != null">
									and t.`role_id` = #{roleId,jdbcType=INTEGER},
							</if>
		 			<if test="roleId != null">
									and t.`role_id` = #{roleId,jdbcType=INTEGER},
							</if>
		 			<if test="deptId != null">
									and t.`dept_id` = #{deptId,jdbcType=INTEGER},
							</if>
		 			<if test="deptId != null">
									and t.`dept_id` = #{deptId,jdbcType=INTEGER},
							</if>
		 		 </trim>
    </select>
 </mapper>